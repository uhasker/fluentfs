Search.setIndex({"docnames": ["_autosummary/hofs", "_autosummary/hofs.common", "_autosummary/hofs.common.functional", "_autosummary/hofs.common.functional.FunctionalIterator", "_autosummary/hofs.common.table", "_autosummary/hofs.common.table.Table", "_autosummary/hofs.common.table.table_from_rows", "_autosummary/hofs.exceptions", "_autosummary/hofs.exceptions.exceptions", "_autosummary/hofs.exceptions.exceptions.HofsException", "_autosummary/hofs.filelike", "_autosummary/hofs.filelike.file_like", "_autosummary/hofs.filelike.file_like.FileLike", "_autosummary/hofs.filelike.file_likes", "_autosummary/hofs.filelike.file_likes.Dir", "_autosummary/hofs.filelike.file_likes.File", "_autosummary/hofs.filelike.file_likes.FileIterator", "_autosummary/hofs.filelike.text_file", "_autosummary/hofs.filelike.text_file.TextFile", "_autosummary/hofs.filelike.text_file.TextFileIterator", "_autosummary/hofs.filelike.text_file.text_file", "_autosummary/hofs.filelike.text_file.text_file_iterator", "_autosummary/hofs.filesize", "_autosummary/hofs.filesize.file_size", "_autosummary/hofs.filesize.file_size.FileSize", "_autosummary/hofs.filesize.file_size_unit", "_autosummary/hofs.filesize.file_size_unit.FileSizeUnit", "_autosummary/hofs.paths", "_autosummary/hofs.paths.paths", "_autosummary/hofs.paths.paths.dir_exists", "_autosummary/hofs.paths.paths.expand_path", "_autosummary/hofs.paths.paths.expand_paths", "_autosummary/hofs.paths.paths.file_exists", "_autosummary/hofs.paths.paths.file_like_exists", "_autosummary/hofs.paths.paths.file_like_name", "_autosummary/hofs.paths.paths.path_is_absolute", "_autosummary/hofs.paths.paths.path_is_relative", "_autosummary/hofs.paths.paths.path_matches", "_autosummary/hofs.paths.paths.path_matches_compiled_regex", "_autosummary/hofs.paths.paths.path_matches_glob", "_autosummary/hofs.paths.paths.path_matches_regex", "_autosummary/hofs.paths.paths.relative_path", "api", "index"], "filenames": ["_autosummary/hofs.rst", "_autosummary/hofs.common.rst", "_autosummary/hofs.common.functional.rst", "_autosummary/hofs.common.functional.FunctionalIterator.rst", "_autosummary/hofs.common.table.rst", "_autosummary/hofs.common.table.Table.rst", "_autosummary/hofs.common.table.table_from_rows.rst", "_autosummary/hofs.exceptions.rst", "_autosummary/hofs.exceptions.exceptions.rst", "_autosummary/hofs.exceptions.exceptions.HofsException.rst", "_autosummary/hofs.filelike.rst", "_autosummary/hofs.filelike.file_like.rst", "_autosummary/hofs.filelike.file_like.FileLike.rst", "_autosummary/hofs.filelike.file_likes.rst", "_autosummary/hofs.filelike.file_likes.Dir.rst", "_autosummary/hofs.filelike.file_likes.File.rst", "_autosummary/hofs.filelike.file_likes.FileIterator.rst", "_autosummary/hofs.filelike.text_file.rst", "_autosummary/hofs.filelike.text_file.TextFile.rst", "_autosummary/hofs.filelike.text_file.TextFileIterator.rst", "_autosummary/hofs.filelike.text_file.text_file.rst", "_autosummary/hofs.filelike.text_file.text_file_iterator.rst", "_autosummary/hofs.filesize.rst", "_autosummary/hofs.filesize.file_size.rst", "_autosummary/hofs.filesize.file_size.FileSize.rst", "_autosummary/hofs.filesize.file_size_unit.rst", "_autosummary/hofs.filesize.file_size_unit.FileSizeUnit.rst", "_autosummary/hofs.paths.rst", "_autosummary/hofs.paths.paths.rst", "_autosummary/hofs.paths.paths.dir_exists.rst", "_autosummary/hofs.paths.paths.expand_path.rst", "_autosummary/hofs.paths.paths.expand_paths.rst", "_autosummary/hofs.paths.paths.file_exists.rst", "_autosummary/hofs.paths.paths.file_like_exists.rst", "_autosummary/hofs.paths.paths.file_like_name.rst", "_autosummary/hofs.paths.paths.path_is_absolute.rst", "_autosummary/hofs.paths.paths.path_is_relative.rst", "_autosummary/hofs.paths.paths.path_matches.rst", "_autosummary/hofs.paths.paths.path_matches_compiled_regex.rst", "_autosummary/hofs.paths.paths.path_matches_glob.rst", "_autosummary/hofs.paths.paths.path_matches_regex.rst", "_autosummary/hofs.paths.paths.relative_path.rst", "api.rst", "index.rst"], "titles": ["hofs", "hofs.common", "hofs.common.functional", "hofs.common.functional.FunctionalIterator", "hofs.common.table", "hofs.common.table.Table", "hofs.common.table.table_from_rows", "hofs.exceptions", "hofs.exceptions.exceptions", "hofs.exceptions.exceptions.HofsException", "hofs.filelike", "hofs.filelike.file_like", "hofs.filelike.file_like.FileLike", "hofs.filelike.file_likes", "hofs.filelike.file_likes.Dir", "hofs.filelike.file_likes.File", "hofs.filelike.file_likes.FileIterator", "hofs.filelike.text_file", "hofs.filelike.text_file.TextFile", "hofs.filelike.text_file.TextFileIterator", "hofs.filelike.text_file.text_file", "hofs.filelike.text_file.text_file_iterator", "hofs.filesize", "hofs.filesize.file_size", "hofs.filesize.file_size.FileSize", "hofs.filesize.file_size_unit", "hofs.filesize.file_size_unit.FileSizeUnit", "hofs.paths", "hofs.paths.paths", "hofs.paths.paths.dir_exists", "hofs.paths.paths.expand_path", "hofs.paths.paths.expand_paths", "hofs.paths.paths.file_exists", "hofs.paths.paths.file_like_exists", "hofs.paths.paths.file_like_name", "hofs.paths.paths.path_is_absolute", "hofs.paths.paths.path_is_relative", "hofs.paths.paths.path_matches", "hofs.paths.paths.path_matches_compiled_regex", "hofs.paths.paths.path_matches_glob", "hofs.paths.paths.path_matches_regex", "hofs.paths.paths.relative_path", "API", "Welcome to hofs\u2019s documentation!"], "terms": {"modul": [0, 1, 7, 10, 22, 27, 43], "class": [2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26], "iter": [3, 14, 16, 19], "t": [3, 15, 16, 18, 19], "base": [3, 5, 12, 14, 15, 16, 18, 19, 24, 26, 41], "__init__": [3, 5, 12, 14, 15, 16, 18, 19, 24, 26], "none": [3, 5, 12, 14, 15, 16, 19, 24], "method": [3, 5, 12, 14, 15, 16, 18, 19, 24], "function": [4, 15, 16, 17, 18, 19, 20, 28], "col": [5, 6], "list": [5, 6, 16, 18, 31, 37, 38, 39, 40], "str": [5, 6, 12, 14, 15, 16, 18, 20, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "object": [5, 14, 15, 16, 18, 20, 24, 33, 34], "attribut": [5, 14, 15, 18, 24, 26], "add_row": 5, "row": [5, 6], "union": [5, 16, 37, 38, 39, 40], "dict": 5, "add": 5, "paramet": [5, 14, 16, 24, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "The": [5, 14, 15, 16, 18, 20, 24, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "It": [5, 18], "must": [5, 16], "either": 5, "valu": [5, 26], "return": [5, 14, 15, 16, 18, 19, 20, 24, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "idx": 5, "int": [5, 18, 19, 24], "get": [5, 15, 18, 20, 24, 34, 41], "column": 5, "index": [5, 43], "thi": [5, 14, 15, 16, 18, 19, 20], "equival": [5, 16, 19], "col_by_nam": 5, "col_nam": 5, "A": [5, 14, 15, 16, 18, 19], "contain": [5, 15, 16, 18, 19], "name": [5, 14, 16, 34], "from": 5, "its": 5, "properti": [5, 14, 15, 18], "n_col": 5, "number": [5, 18, 24], "n_row": 5, "row_dict": 5, "dictionari": 5, "along": [5, 16], "respect": 5, "row_idx": 5, "col_idx": 5, "resid": 5, "col_index": 5, "value_by_nam": 5, "path": [12, 14, 15, 16, 18, 20], "abc": 12, "functionaliter": [14, 16, 18, 19], "an": [14, 15, 18, 26], "all": [14, 16, 19, 29, 32], "directori": [14, 15, 16, 18, 29, 32, 33], "present": [14, 29, 32, 33], "subdirectori": 14, "file": [14, 16, 18, 19, 20, 29, 32, 33, 34, 37], "file_nam": 14, "given": [14, 16, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41], "locat": 14, "repres": [14, 15, 18, 29, 32], "like": [14, 16, 30, 33, 34, 37], "fileiter": [14, 21], "regular": [14, 29, 32, 38, 40], "access_tim": [15, 18], "datetim": [15, 18], "last": [15, 18], "access": [15, 18], "time": [15, 18], "atim": [15, 18], "byte": [15, 18], "content": [15, 18], "dir": [15, 18], "ext": [15, 18], "extens": [15, 16, 18], "If": [15, 18], "ha": [15, 18], "empti": [15, 18], "string": [15, 18, 24], "otherwis": [15, 16, 18, 33, 35, 36, 37, 38, 39, 40], "without": [15, 16, 18], "preced": [15, 16, 18], "dot": [15, 16, 18], "e": [15, 16, 18, 33], "g": [15, 16, 18], "txt": [15, 18], "mod_tim": [15, 18], "modif": [15, 18], "mtime": [15, 18], "size": [15, 18, 24], "files": [15, 18], "encod": [15, 18, 20], "utf": [15, 18, 20], "8": [15, 18, 20], "textfil": [15, 19, 20], "note": [15, 18, 19, 20], "you": [15, 16, 18, 20], "ar": [15, 16, 18, 19, 20], "respons": [15, 18, 20], "ensur": [15, 18, 20], "underli": [15, 18, 20], "valid": [15, 18, 19, 20], "text": [15, 18, 19, 20], "sinc": [15, 18, 20], "veri": [15, 18, 20], "expens": [15, 18, 20], "automat": [15, 18, 20], "alwai": [15, 18, 20], "succe": [15, 18, 20], "even": [15, 18, 20], "howev": [15, 18, 20], "when": [15, 18, 20], "call": [15, 18, 20], "result": [15, 18, 20], "error": [15, 18, 20], "occur": [15, 18, 20], "param": [15, 18, 20], "us": [15, 16, 18, 20, 24], "obtain": [15, 18, 20], "text_fil": 15, "exclud": 16, "match": [16, 37, 38, 39, 40], "non": 16, "filter_ext": 16, "filter": 16, "lambda": [16, 19], "have": 16, "filter_extens": 16, "includ": 16, "don": 16, "therebi": 16, "include_or_exclud": 16, "bool": [16, 29, 32, 33, 35, 36, 37, 38, 39, 40], "scenario": 16, "where": 16, "bunch": 16, "flag": 16, "specifi": 16, "whether": [16, 29, 32, 33, 35, 36, 37, 38, 39, 40], "thei": 16, "should": 16, "would": 16, "potenti": 16, "construct": 16, "two": 16, "differ": 16, "chain": 16, "true": [16, 29, 32, 33, 35, 36, 37, 38, 39, 40], "fals": [16, 29, 32, 33, 35, 36, 37, 38, 39, 40], "map_nam": 16, "map": [16, 19], "map_path": 16, "cc": 18, "charact": [18, 19, 30], "char_count": [18, 19], "lc": 18, "line": [18, 19], "line_count": [18, 19], "wc": 18, "word": [18, 19], "word_count": [18, 19], "assum": [18, 19], "separ": 18, "whitespac": 18, "map_cc": 19, "count": 19, "implicitli": 19, "map_char_count": 19, "map_lc": 19, "map_line_count": 19, "map_wc": 19, "map_word_count": 19, "self": [20, 21], "textfileiter": 21, "size_byt": 24, "unit": 24, "filesizeunit": 24, "auto": 24, "round": 24, "3": 24, "readabl": 24, "digit": 24, "size_f": 24, "float": 24, "enum": 26, "enumer": 26, "check": [29, 32, 33, 35, 36, 37, 38, 39, 40], "doe": [29, 32], "exist": [29, 32], "maxim": 30, "expand": 30, "absolut": [30, 35], "correspond": 30, "special": 30, "environ": 30, "variabl": 30, "i": 33, "rel": [36, 41], "base_path": [37, 41], "one": 37, "compiled_regex": 38, "pattern": [38, 39], "compil": 38, "express": [38, 40], "glob": 39, "regex": 40, "api": 43, "search": 43, "page": 43}, "objects": {"": [[0, 0, 0, "-", "hofs"]], "hofs": [[1, 0, 0, "-", "common"], [7, 0, 0, "-", "exceptions"], [10, 0, 0, "-", "filelike"], [22, 0, 0, "-", "filesize"], [27, 0, 0, "-", "paths"]], "hofs.common": [[2, 0, 0, "-", "functional"], [4, 0, 0, "-", "table"]], "hofs.common.functional": [[3, 1, 1, "", "FunctionalIterator"]], "hofs.common.functional.FunctionalIterator": [[3, 2, 1, "", "__init__"]], "hofs.common.table": [[5, 1, 1, "", "Table"], [6, 4, 1, "", "table_from_rows"]], "hofs.common.table.Table": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "add_row"], [5, 2, 1, "", "col"], [5, 2, 1, "", "col_by_name"], [5, 2, 1, "", "col_name"], [5, 3, 1, "", "col_names"], [5, 3, 1, "", "n_cols"], [5, 3, 1, "", "n_rows"], [5, 2, 1, "", "row"], [5, 2, 1, "", "row_dict"], [5, 2, 1, "", "value"], [5, 2, 1, "", "value_by_name"]], "hofs.exceptions": [[8, 0, 0, "-", "exceptions"]], "hofs.exceptions.exceptions": [[9, 5, 1, "", "HofsException"]], "hofs.filelike": [[11, 0, 0, "-", "file_like"], [13, 0, 0, "-", "file_likes"], [17, 0, 0, "-", "text_file"]], "hofs.filelike.file_like": [[12, 1, 1, "", "FileLike"]], "hofs.filelike.file_like.FileLike": [[12, 2, 1, "", "__init__"]], "hofs.filelike.file_likes": [[14, 1, 1, "", "Dir"], [15, 1, 1, "", "File"], [16, 1, 1, "", "FileIterator"]], "hofs.filelike.file_likes.Dir": [[14, 2, 1, "", "__init__"], [14, 3, 1, "", "dirs"], [14, 2, 1, "", "file"], [14, 3, 1, "", "file_likes"], [14, 3, 1, "", "files"]], "hofs.filelike.file_likes.File": [[15, 2, 1, "", "__init__"], [15, 3, 1, "", "access_time"], [15, 3, 1, "", "atime"], [15, 3, 1, "", "bytes"], [15, 3, 1, "", "dir"], [15, 3, 1, "", "ext"], [15, 3, 1, "", "extension"], [15, 3, 1, "", "mod_time"], [15, 3, 1, "", "mtime"], [15, 3, 1, "", "size"], [15, 2, 1, "", "t"], [15, 2, 1, "", "text_file"]], "hofs.filelike.file_likes.FileIterator": [[16, 2, 1, "", "__init__"], [16, 2, 1, "", "exclude"], [16, 2, 1, "", "filter_ext"], [16, 2, 1, "", "filter_extension"], [16, 2, 1, "", "include"], [16, 2, 1, "", "include_or_exclude"], [16, 2, 1, "", "map_name"], [16, 2, 1, "", "map_path"]], "hofs.filelike.text_file": [[18, 1, 1, "", "TextFile"], [19, 1, 1, "", "TextFileIterator"], [20, 4, 1, "", "text_file"], [21, 4, 1, "", "text_file_iterator"]], "hofs.filelike.text_file.TextFile": [[18, 2, 1, "", "__init__"], [18, 3, 1, "", "access_time"], [18, 3, 1, "", "atime"], [18, 3, 1, "", "bytes"], [18, 3, 1, "", "cc"], [18, 3, 1, "", "char_count"], [18, 3, 1, "", "content"], [18, 3, 1, "", "dir"], [18, 3, 1, "", "ext"], [18, 3, 1, "", "extension"], [18, 3, 1, "", "lc"], [18, 3, 1, "", "line_count"], [18, 3, 1, "", "lines"], [18, 3, 1, "", "mod_time"], [18, 3, 1, "", "mtime"], [18, 3, 1, "", "size"], [18, 2, 1, "", "t"], [18, 2, 1, "", "text_file"], [18, 3, 1, "", "wc"], [18, 3, 1, "", "word_count"], [18, 3, 1, "", "words"]], "hofs.filelike.text_file.TextFileIterator": [[19, 2, 1, "", "__init__"], [19, 2, 1, "", "map_cc"], [19, 2, 1, "", "map_char_count"], [19, 2, 1, "", "map_lc"], [19, 2, 1, "", "map_line_count"], [19, 2, 1, "", "map_wc"], [19, 2, 1, "", "map_word_count"]], "hofs.filesize": [[23, 0, 0, "-", "file_size"], [25, 0, 0, "-", "file_size_unit"]], "hofs.filesize.file_size": [[24, 1, 1, "", "FileSize"]], "hofs.filesize.file_size.FileSize": [[24, 2, 1, "", "__init__"], [24, 2, 1, "", "size"], [24, 2, 1, "", "size_f"]], "hofs.filesize.file_size_unit": [[26, 1, 1, "", "FileSizeUnit"]], "hofs.filesize.file_size_unit.FileSizeUnit": [[26, 2, 1, "", "__init__"]], "hofs.paths": [[28, 0, 0, "-", "paths"]], "hofs.paths.paths": [[29, 4, 1, "", "dir_exists"], [30, 4, 1, "", "expand_path"], [31, 4, 1, "", "expand_paths"], [32, 4, 1, "", "file_exists"], [33, 4, 1, "", "file_like_exists"], [34, 4, 1, "", "file_like_name"], [35, 4, 1, "", "path_is_absolute"], [36, 4, 1, "", "path_is_relative"], [37, 4, 1, "", "path_matches"], [38, 4, 1, "", "path_matches_compiled_regex"], [39, 4, 1, "", "path_matches_glob"], [40, 4, 1, "", "path_matches_regex"], [41, 4, 1, "", "relative_path"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"hof": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43], "common": [1, 2, 3, 4, 5, 6], "function": [2, 3], "functionaliter": 3, "tabl": [4, 5, 6, 43], "table_from_row": 6, "except": [7, 8, 9], "hofsexcept": 9, "filelik": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "file_lik": [11, 12, 13, 14, 15, 16], "dir": 14, "file": 15, "fileiter": 16, "text_fil": [17, 18, 19, 20, 21], "textfil": 18, "textfileiter": 19, "text_file_iter": 21, "files": [22, 23, 24, 25, 26], "file_s": [23, 24], "file_size_unit": [25, 26], "filesizeunit": 26, "path": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41], "dir_exist": 29, "expand_path": [30, 31], "file_exist": 32, "file_like_exist": 33, "file_like_nam": 34, "path_is_absolut": 35, "path_is_rel": 36, "path_match": 37, "path_matches_compiled_regex": 38, "path_matches_glob": 39, "path_matches_regex": 40, "relative_path": 41, "api": 42, "welcom": 43, "s": 43, "document": 43, "content": 43, "indic": 43}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 56}})